plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}


def junitVersion = "5.7.1",
    selenideVersion = "5.20.1",
    allureVersion = "2.13.9"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:4.3.1",
            "io.rest-assured:json-schema-validator:4.3.1",
            "org.assertj:assertj-core:3.19.0",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.fasterxml.jackson.core:jackson-annotations:2.10.3")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
